@page "/addresses"
@attribute [Authorize]

@inject HttpClient Http
@inject IDialogService DialogService

@using Core.Dtos.Address
@using System.Net.Http.Json

<PageTitle>Endereços</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Endereços</MudText>

@if (_loading)
{
	<p><em>Carregando...</em></p>
}
else if (!string.IsNullOrEmpty(_errorMessage))
{
	<MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
}
else
{
	<MudDataGrid Items="@_addresses.Take(10)">
		<Columns>
			<PropertyColumn Property="x => x.Street" Title="Logradouro" />
			<PropertyColumn Property="x => x.Number" Title="Número" />
			<PropertyColumn Property="x => x.Complement" Title="Complemento" />
			<PropertyColumn Property="x => x.Neighborhood" Title="Bairro" />
			<PropertyColumn Property="x => x.City" Title="Cidade" />
			<PropertyColumn Property="x => x.State" Title="Estado" />
			<PropertyColumn Property="x => x.Country" Title="Country" />
			<PropertyColumn Property="x => x.PostalCode" Title="CEP" />

				<TemplateColumn Title="Ações">
					<CellTemplate>
						<MudIconButton	Icon ="@Icons.Material.Filled.Edit"
										Variant="Variant.Filled"
										Color="Color.Primary"
										Size="Size.Small"
										OnClick="@(() => OpenEditDialog(context.Item))" />
					</CellTemplate>
				</TemplateColumn>
		</Columns>
	</MudDataGrid>
}

@code {
	private ICollection<AddressDto>? _addresses;
	private string _errorMessage = string.Empty;
	private bool _loading = true;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			_addresses = await Http.GetFromJsonAsync<ICollection<AddressDto>>("api/address");
		}
		catch (HttpRequestException ex)
		{
			_errorMessage = $"Erro ao buscar os endereços: {ex.Message}";
		}
		finally
		{
			_loading = false;
		}
	}

	private async Task OpenEditDialog(AddressDto addressDto)
	{
		var addressCopy = addressDto;

		var parameters = new DialogParameters<AddressEditDialog>
		{
			{ x => x.AddressToEdit, addressCopy}
		};

		var dialog = await DialogService.ShowAsync<AddressEditDialog>("Editar endereço", parameters);

		var result = await dialog.Result;

		if (!result.Canceled && result.Data is AddressDto updatedAddress)
		{
			var originalAddress = _addresses?.FirstOrDefault(a => a.Id == updatedAddress.Id);

			if (originalAddress != null)
			{
				StateHasChanged();
			}
		}
	}
}
